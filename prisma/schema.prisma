generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model ActDetailDB {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @db.Date
  createdBy   String
  deleteBy    String
  description String
  dislink     String
  disname     String
  enddate     String
  img         String
  point       String
  startdate   String
  title       String
  type        String
  updatedAt   DateTime @db.Date
  updatedBy   String
}

model ActType {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @db.Date
  /// Could not determine type: the field only had null or empty values in the sample set.
  createdBy Json?
  deleteBy  String
  name      String
  updatedAt DateTime @db.Date
  updatedBy String
}

model BlogDB {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @db.Date
  createdBy   String
  creditlink  String
  deleteBy    String
  description String
  img         String
  title       String
  updatedAt   DateTime @db.Date
  updatedBy   String
  video       String
}

model CustomerDB {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt  DateTime @db.Date
  /// Could not determine type: the field only had null or empty values in the sample set.
  createdBy  Json?
  deleteBy   String
  discord_id String   @unique
  email      String   @unique
  password   String
  server     String   @unique
  updatedAt  DateTime @db.Date
  updatedBy  String
  username   String
}

model GameCategoryDB {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @db.Date
  createdBy String
  deleteBy  String
  title     String
  updatedAt DateTime @db.Date
  updatedBy String
}

model GameConditionMatchDB {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt  DateTime @db.Date
  createdBy  String?
  deleteBy   String?
  gameId     String   @db.ObjectId
  maxParty   BigInt
  rankNumber BigInt
  updatedAt  DateTime @db.Date
  /// Could not determine type: the field only had null or empty values in the sample set.
  updatedBy  Json?
}

model GameOnlineDB {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @db.Date
  createdBy   String?
  deleteBy    String
  game_name   String
  logo        String?
  /// Could not determine type: the field only had null or empty values in the sample set.
  numberMatch Json?
  partyLimit  BigInt
  ranking     Boolean
  updatedAt   DateTime @db.Date
  updatedBy   String
}

model GameRankDB {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt  DateTime @db.Date
  createdBy  Json?
  deleteBy   String
  gameId     String   @db.ObjectId
  imgRank    String
  selcetShow String
  nameRank   String
  number     BigInt
  updatedAt  DateTime @db.Date
  updatedBy  String
}

model GameTypeDB {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  categoryId String   @db.ObjectId
  createdAt  DateTime @db.Date
  createdBy  String
  deleteBy   String
  title      String
  updatedAt  DateTime @db.Date
  updatedBy  String
}

model GameTypeGame {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @db.Date
  createdBy String
  deleteBy  String
  gameId    String   @db.ObjectId
  typeId    String   @db.ObjectId
  updatedAt DateTime @db.Date
  updatedBy String
}

model GuildDB {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  Logo         String         @default("https://www.design365print.com/UploadFile/Blog/blog_941976621.jpg")
  guild_copper BigInt?
  guild_leader String?
  guild_level  BigInt?
  guild_name   String?
  guild_roleId String?
  guild_size   BigInt?
  GuildMembers GuildMembers[]
}

model GuildCreateReport {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  ownerId   String
  channelId String
  messageId String
  guildName String
  members   String[]
}

model GuildMembers {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  guildId  String?  @db.ObjectId
  position String
  userId   String
  guildDB  GuildDB? @relation(fields: [guildId], references: [id])
}

model GuildProfileDB {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  avatar      String
  backdrop    String
  createdAt   DateTime @db.Date
  createdBy   String
  deleteBy    String
  description String
  discordlink String
  guildId     String?
  guildname   String
  rule        String
  updatedAt   DateTime @db.Date
  updatedBy   String
}

model ImageList {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @db.Date
  createdBy String
  deleteBy  String
  imageUrl  String   @unique
  modalName String
  nameFile  String   @unique
  updatedAt DateTime @db.Date
  updatedBy String
}

model InviteData {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  guildId String
  userId  String
}

model InviteRequest {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  guildId String
  userId  String
}

model JobQueueDB {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model NewsCategoryDB {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @db.Date
  /// Could not determine type: the field only had null or empty values in the sample set.
  createdBy Json?
  deleteBy  String
  title     String
  updatedAt DateTime @db.Date
  updatedBy String
}

model NewsTypeDB {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  categoryId String   @db.ObjectId
  createdAt  DateTime @db.Date
  /// Could not determine type: the field only had null or empty values in the sample set.
  createdBy  Json?
  deleteBy   String
  title      String
  updatedAt  DateTime @db.Date
  updatedBy  String
}

model NewsTypeNews {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime @db.Date
  /// Could not determine type: the field only had null or empty values in the sample set.
  createdBy    Json?
  deleteBy     String
  newsUpdateId String   @db.ObjectId
  typeId       String   @db.ObjectId
  updatedAt    DateTime @db.Date
  updatedBy    String
}

model NewsUpdateDB {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime  @db.Date
  createdBy   String?
  creditlink  String
  deleteBy    String?
  description String
  img         String
  title       String
  updatedAt   DateTime? @db.Date
  updatedBy   String?
}

model ServerMasterDB {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  ownerId    String
  serverId   String   @unique
  serverName String
  createdAt  DateTime @db.Date
  updatedAt  DateTime @db.Date
}

model ServerDB {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  ownerId     String
  serverId    String   @unique
  serverName  String
  openBot     Boolean  @default(false) // เพิ่มค่าเริ่มต้นเป็น false
  adminRoleId String? // ฟิลด์สำหรับเก็บรหัสบทบาทแอดมิน (optional)
  userRoleId  String? // ฟิลด์สำหรับเก็บรหัสบทบาทผู้ใช้ (optional)
  openUntilAt DateTime @db.Date
  createdAt   DateTime @db.Date
  updatedAt   DateTime @db.Date
}

model UserDB {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  alternativeGender String?
  birthday          DateTime? @db.Date
  createdAt         DateTime  @db.Date
  /// Could not determine type: the field only had null or empty values in the sample set.
  createdBy         Json?
  deleteBy          String
  discord_id        String    @unique
  email             String    @unique
  firstname         String?
  gender            String?
  lastname          String?
  nickname          String?
  password          String?
  updatedAt         DateTime  @db.Date
  updatedBy         String
  username          String?
}

model UserGameRank {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt  DateTime @db.Date
  deleteBy   String
  gameId     String   @db.ObjectId
  gameRankId String   @db.ObjectId
  invitation Boolean
  updatedAt  DateTime @db.Date
  updatedBy  String
  /// Multiple data types found: String: 85.7%, String (ObjectId): 14.3% out of 14 sampled entries
  userId     Json
}

model Wallet {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  coin_copper  BigInt
  coin_crystal BigInt
  coin_diamond BigInt
  coin_gold    BigInt
  coin_silver  BigInt
  createdAt    DateTime @db.Date
  updatedAt    DateTime @db.Date
  userId       String
}

model WebDefaultDB {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt      DateTime @db.Date
  createdBy      String
  defaultImg     String
  defaultProfile String
  deleteBy       String
  facebook       String
  /// Could not determine type: the field only had null or empty values in the sample set.
  gmail          Json?
  /// Could not determine type: the field only had null or empty values in the sample set.
  instagram      Json?
  logoCircle     String
  logoSquare     String
  logoWide       String
  tiktok         String
  updatedAt      DateTime @db.Date
  updatedBy      String
  youtube        String
}

model inviteData {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  guildId String
  userId  String
}

model paymentHistory {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  coin_copper  BigInt
  coin_crystal BigInt
  coin_diamond BigInt
  coin_gold    BigInt
  coin_silver  BigInt
  createdAt    DateTime @db.Date
  status       String
  title        String
  updatedAt    DateTime @db.Date
  updatedBy    String
  userId       String
}
