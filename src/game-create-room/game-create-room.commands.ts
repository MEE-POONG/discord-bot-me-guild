import { Injectable, Logger } from '@nestjs/common';
import { Button, Context, SlashCommand, SlashCommandContext, ButtonContext } from 'necord';
import { NecordPaginationService } from '@necord/pagination';
import { EmbedBuilder, GuildMember } from 'discord.js';

@Injectable()
export class GameCreateRoomCommands {
  private readonly logger = new Logger(GameCreateRoomCommands.name);
  public constructor(private readonly paginationService: NecordPaginationService) {}

  @SlashCommand({ name: 'game-create-room', description: '‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏Å‡∏°‡∏™‡πå' })
  public async onGameCreateRoom(@Context() [interaction]: SlashCommandContext) {
    try {
      const pagination = this.paginationService.get('game_create_room');
      const page = await pagination.build();

      if (interaction.member instanceof GuildMember) {
        const voiceChannel = interaction.member.voice.channel;

        if (!voiceChannel) {
          await interaction.reply({
            embeds: [
              new EmbedBuilder()
                .setTitle('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á')
                .setDescription('‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏à‡∏∂‡∏á‡∏à‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ')
                .setColor('Red'), // ‚úÖ ‡∏™‡∏µ‡πÅ‡∏î‡∏á
              // .setThumbnail('https://cdn-icons-png.flaticon.com/512/1828/1828843.png'), // (optional) ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
            ],
            components: [],
            ephemeral: true, // üëà ‡∏ã‡πà‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡πâ‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏ô‡∏Å‡∏î (‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥)
          });

          // ‚úÖ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏á 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
          setTimeout(async () => {
            try {
              await interaction.deleteReply();
            } catch (err) {
              console.warn('‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°:', err.message);
            }
          }, 10000);

          return;
        }
      }

      return interaction.reply({ ...page, ephemeral: true });
    } catch (error) {
      console.error('Error in onGameCreateRoom:', error);
      return interaction.reply({
        content: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á',
        ephemeral: true,
      });
    }
  }

  @Button('game-create-room')
  public async onGameCreateRoomButton(@Context() [interaction]: ButtonContext) {
    try {
      this.logger.debug('Processing game create room button interaction');
      const pagination = this.paginationService.get('game_create_room');
      const page = await pagination.build();

      if (interaction.member instanceof GuildMember) {
        const voiceChannel = interaction.member.voice.channel;

        if (!voiceChannel) {
          await interaction.reply({
            embeds: [
              new EmbedBuilder()
                .setTitle('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á')
                .setDescription('‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏à‡∏∂‡∏á‡∏à‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ')
                .setColor('Red'), // ‚úÖ ‡∏™‡∏µ‡πÅ‡∏î‡∏á
              // .setThumbnail('https://cdn-icons-png.flaticon.com/512/1828/1828843.png'), // (optional) ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
            ],
            components: [],
            ephemeral: true, // üëà ‡∏ã‡πà‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡πâ‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏ô‡∏Å‡∏î (‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥)
          });

          // ‚úÖ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏á 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
          setTimeout(async () => {
            try {
              await interaction.deleteReply();
            } catch (err) {
              console.warn('‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°:', err.message);
            }
          }, 10000);

          return;
        }
      }

      interaction.reply({ ...page, ephemeral: true });
      setTimeout(async () => {
        try {
          await interaction.deleteReply();
        } catch (e) {
          console.warn('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ:', e.message);
        }
      }, 300000); // 5 ‡∏ô‡∏≤‡∏ó‡∏µ
    } catch (error) {
      console.error('Error in onGameCreateRoomButton:', error);
      return interaction.reply({
        content: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á',
        ephemeral: true,
      });
    }
  }
}
